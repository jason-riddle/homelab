---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    # Run at 3pm on Friday.
    # REF: https://crontab.guru/#0_3_*_*_5
    - cron: "0 3 * * 5"

env:
  # Colors
  # REF: http://web.archive.org/web/20230608140615/https://www.jeffgeerling.com/blog/2020/getting-colorized-output-molecule-and-ansible-on-github-actions-ci
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'
  # YAML Output
  # REF: http://web.archive.org/web/20220707112219/https://www.jeffgeerling.com/blog/2018/use-ansibles-yaml-callback-plugin-better-cli-experience
  ANSIBLE_STDOUT_CALLBACK: 'yaml'
  ANSIBLE_LOAD_CALLBACK_PLUGINS: true
  # SSH Pipelining
  ANSIBLE_PIPELINING: true
  ANSIBLE_SSH_CONTROL_PATH: '/tmp/ansible-ssh-%%h-%%p-%%r'
  # Task Timeout
  # Requires Ansible 2.10
  # REF: https://web.archive.org/web/20230819083945/https://docs.ansible.com/ansible/latest/reference_appendices/config.html#task-timeout
  ANSIBLE_TASK_TIMEOUT: 120 # seconds
  # Tailscale
  GHA_TAILSCALE_AUTHKEY: "${{ secrets.GHA_TAILSCALE_AUTHKEY }}"

jobs:

  integration:
    name: Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - debian11 # Bullseye

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible

      - name: Set HOSTNAME.
        run: echo "HOSTNAME=$(cat /etc/hostname)" >> $GITHUB_ENV

      - name: Set up the test environment.
        run: |
          cp tests/ansible.cfg ./ansible.cfg
          cp tests/inventory.yml ./inventory.yml
          ansible-galaxy install -r provisioning/requirements.yml

      - name: Test the pi_cluster playbook syntax.
        run: ansible-playbook provisioning/pi_cluster.yml --syntax-check

      - name: Test the pi_cluster playbook.
        run: ansible-playbook provisioning/pi_cluster.yml --skip-tags "boot,hostname"

      - name: Idempotence check for pi_cluster playbook.
        run: |
          idempotence=$(mktemp)
          ansible-playbook provisioning/pi_cluster.yml --skip-tags "boot,hostname" | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
