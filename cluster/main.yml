---
- name: Set up cluster-wide configuration.
  hosts: cluster
  gather_facts: false
  become: true
  tags:
    - control_plane
    - nodes

  handlers:
    - name: reboot-pi
      ansible.builtin.reboot:

  pre_tasks:
    - name: Ping to validate the initial connection.
      ansible.builtin.ping:
        data: pong

  tasks:
    - name: Ensure cgroups are configured correctly in cmdline.txt.
      ansible.builtin.replace:
        path: /boot/cmdline.txt
        regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_items:
        - "cgroup_memory=1"
        - "cgroup_enable=memory"
      notify: reboot-pi
      tags:
        - boot-cmdline

    - name: Download K3s install script.
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "~/k3s_install.sh"
        mode: a+x


- name: Configure the control plane.
  hosts: control_plane
  gather_facts: false
  become: true
  tags:
    - control_plane
    - nodes

  pre_tasks:
    - name: Ping to validate the initial connection.
      ansible.builtin.ping:
        data: pong

  tasks:
    - name: Install K3s on control plane (takes a while).
      ansible.builtin.shell: >-
        ~/k3s_install.sh >> ~/k3s_install_log.txt
      args:
        chdir: "~"
        creates: /var/lib/rancher/k3s/server/node-token

    - name: Get node token.
      ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
      changed_when: false
      register: node_token_output

    - name: Set node_token fact.
      ansible.builtin.set_fact:
        node_token: "{{ node_token_output.stdout_lines[0] }}"


- name: Configure the worker nodes.
  hosts: nodes
  gather_facts: false
  become: true
  tags:
    - nodes

  pre_tasks:
    - name: Ping to validate the initial connection.
      ansible.builtin.ping:
        data: pong

  tasks:
    - name: Install K3s on nodes (takes a while).
      ansible.builtin.shell: >-
        K3S_URL="https://{{ groups['control_plane'][0] }}:6443"
        K3S_TOKEN="{{ hostvars[groups['control_plane'][0]]['node_token'] }}"
        ~/k3s_install.sh >> ~/k3s_install_log.txt
      args:
        chdir: "~"
        creates: /var/lib/rancher/k3s/agent/kubelet.kubeconfig


- name: Show the kubeconfig file.
  hosts: control_plane
  gather_facts: false
  become: true
  tags:
    - kubeconfig

  pre_tasks:
    - name: Ping to validate the initial connection.
      ansible.builtin.ping:
        data: pong

  tasks:
    - name: Get kubeconfig.
      command: cat /etc/rancher/k3s/k3s.yaml
      changed_when: false
      register: kubeconfig

    - name: Parse kubeconfig into kubeconfig_yaml.
      set_fact:
        kubeconfig_yaml: "{{ kubeconfig.stdout | from_yaml }}"

    - name: Print kubeconfig_yaml.
      debug: var=kubeconfig_yaml
